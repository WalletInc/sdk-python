# coding: utf-8

"""
    wallet-api

    API

    The version of the OpenAPI document: 2.1.600
    Contact: development@wallet.inc
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wallet.models.fetch_all_static_vouchers_associated_with_customer_with_voucher_id200_response_inner import FetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner

class TestFetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner(unittest.TestCase):
    """FetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner:
        """Test FetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner`
        """
        model = FetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner()
        if include_optional:
            return FetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner(
                payment_design = wallet.models.payment_design.PaymentDesign(
                    border_color = '#f0f0f0', 
                    border_style_type = Dashed, 
                    border_size = '4px', 
                    border_radius = 4, 
                    font_color = '#777777', 
                    font_type = 'Arial', 
                    abbreviation = 'ABBR', 
                    acronym = 'AR', 
                    icon = 'fa-anchor', 
                    design_name = 'Thanksgiving Design', 
                    display_name = 'Thanksgiving Coupon', 
                    background_image_url = 'https://example.com/background-image', 
                    company_logo_url = 'https://example.com/company-logo', 
                    employee_id = 'C0123456789', 
                    id = jdu37eua98, 
                    merchant_id = 'C0123456789', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_active = True, ),
                value_type = None,
                voucher_type = 1.337,
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                title = '',
                is_redeemed = True,
                display_value = '',
                offer_amount_cents_decimal = '',
                offer_amount_cents = 1.337,
                member_id = '',
                cell_phone_number = '',
                id = ''
            )
        else:
            return FetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner(
                payment_design = wallet.models.payment_design.PaymentDesign(
                    border_color = '#f0f0f0', 
                    border_style_type = Dashed, 
                    border_size = '4px', 
                    border_radius = 4, 
                    font_color = '#777777', 
                    font_type = 'Arial', 
                    abbreviation = 'ABBR', 
                    acronym = 'AR', 
                    icon = 'fa-anchor', 
                    design_name = 'Thanksgiving Design', 
                    display_name = 'Thanksgiving Coupon', 
                    background_image_url = 'https://example.com/background-image', 
                    company_logo_url = 'https://example.com/company-logo', 
                    employee_id = 'C0123456789', 
                    id = jdu37eua98, 
                    merchant_id = 'C0123456789', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_active = True, ),
                value_type = None,
                voucher_type = 1.337,
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                title = '',
                is_redeemed = True,
                display_value = '',
                offer_amount_cents_decimal = '',
                offer_amount_cents = 1.337,
                member_id = '',
                cell_phone_number = '',
                id = '',
        )
        """

    def testFetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner(self):
        """Test FetchAllStaticVouchersAssociatedWithCustomerWithVoucherID200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
