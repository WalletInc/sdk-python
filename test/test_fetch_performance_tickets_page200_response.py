# coding: utf-8

"""
    wallet-api

    API

    The version of the OpenAPI document: 2.1.600
    Contact: development@wallet.inc
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wallet.models.fetch_performance_tickets_page200_response import FetchPerformanceTicketsPage200Response

class TestFetchPerformanceTicketsPage200Response(unittest.TestCase):
    """FetchPerformanceTicketsPage200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FetchPerformanceTicketsPage200Response:
        """Test FetchPerformanceTicketsPage200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FetchPerformanceTicketsPage200Response`
        """
        model = FetchPerformanceTicketsPage200Response()
        if include_optional:
            return FetchPerformanceTicketsPage200Response(
                data = [
                    wallet.models.wt_ticket.WTTicket(
                        recipient_phone_number = '', 
                        recipient_email_address = '', 
                        recipient_member_id = '', 
                        is_comp = True, 
                        quantity = 1, 
                        performance_id = '', 
                        id = null, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_active = True, 
                        merchant_id = 'C0123456789', 
                        is_claimed = True, 
                        date_time_claimed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        claimed_by_phone_number = '', 
                        redeemed_source = '', 
                        redeemed_transaction_id = '', 
                        transaction_type = '', 
                        register_id = '', 
                        is_redeemed = True, 
                        date_time_redeemed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                total_rows = 1.337
            )
        else:
            return FetchPerformanceTicketsPage200Response(
                data = [
                    wallet.models.wt_ticket.WTTicket(
                        recipient_phone_number = '', 
                        recipient_email_address = '', 
                        recipient_member_id = '', 
                        is_comp = True, 
                        quantity = 1, 
                        performance_id = '', 
                        id = null, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_active = True, 
                        merchant_id = 'C0123456789', 
                        is_claimed = True, 
                        date_time_claimed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        claimed_by_phone_number = '', 
                        redeemed_source = '', 
                        redeemed_transaction_id = '', 
                        transaction_type = '', 
                        register_id = '', 
                        is_redeemed = True, 
                        date_time_redeemed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                total_rows = 1.337,
        )
        """

    def testFetchPerformanceTicketsPage200Response(self):
        """Test FetchPerformanceTicketsPage200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
