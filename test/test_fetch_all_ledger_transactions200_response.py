# coding: utf-8

"""
    wallet-api

    API

    The version of the OpenAPI document: 2.1.600
    Contact: development@wallet.inc
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wallet.models.fetch_all_ledger_transactions200_response import FetchAllLedgerTransactions200Response

class TestFetchAllLedgerTransactions200Response(unittest.TestCase):
    """FetchAllLedgerTransactions200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FetchAllLedgerTransactions200Response:
        """Test FetchAllLedgerTransactions200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FetchAllLedgerTransactions200Response`
        """
        model = FetchAllLedgerTransactions200Response()
        if include_optional:
            return FetchAllLedgerTransactions200Response(
                entries = [
                    wallet.models.ledger_entry.LedgerEntry(
                        register_id = 'POS-WEB-1', 
                        register_type = null, 
                        transaction_id = 'jhkhbwe6yt2gyb3yhidbuiohuioerfg', 
                        transaction_type = redemption, 
                        check_amount = 5000, 
                        transaction_amount = 3000, 
                        check_balance = 2000, 
                        discount_received = '60%', 
                        payment_object_prefix = 'SV', 
                        payment_object_id = 'C0123456789', 
                        parent_object_prefix = 'SV', 
                        parent_object_id = 7HSIj3uwkq, 
                        meta_value = '', 
                        id = jdu37eua98, 
                        merchant_id = 'C0123456789', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_active = True, 
                        refunded_ledger_entry_id = 'C0123456789', 
                        transaction_amount_decimal = '3.00', 
                        transaction_amount_string = '$3.00', 
                        check_amount_decimal = '5.00', 
                        check_amount_string = '$5.00', 
                        check_balance_decimal = '2.00', 
                        check_balance_string = '$2.00', )
                    ],
                page_count = 1.337,
                total_records = 1.337
            )
        else:
            return FetchAllLedgerTransactions200Response(
                entries = [
                    wallet.models.ledger_entry.LedgerEntry(
                        register_id = 'POS-WEB-1', 
                        register_type = null, 
                        transaction_id = 'jhkhbwe6yt2gyb3yhidbuiohuioerfg', 
                        transaction_type = redemption, 
                        check_amount = 5000, 
                        transaction_amount = 3000, 
                        check_balance = 2000, 
                        discount_received = '60%', 
                        payment_object_prefix = 'SV', 
                        payment_object_id = 'C0123456789', 
                        parent_object_prefix = 'SV', 
                        parent_object_id = 7HSIj3uwkq, 
                        meta_value = '', 
                        id = jdu37eua98, 
                        merchant_id = 'C0123456789', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_active = True, 
                        refunded_ledger_entry_id = 'C0123456789', 
                        transaction_amount_decimal = '3.00', 
                        transaction_amount_string = '$3.00', 
                        check_amount_decimal = '5.00', 
                        check_amount_string = '$5.00', 
                        check_balance_decimal = '2.00', 
                        check_balance_string = '$2.00', )
                    ],
                page_count = 1.337,
                total_records = 1.337,
        )
        """

    def testFetchAllLedgerTransactions200Response(self):
        """Test FetchAllLedgerTransactions200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
